plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

loom {
	runtimeOnlyLog4j = true
}

repositories {

	// Cloth Config
	maven {
		url "https://maven.shedaniel.me/"
	}

	// ModMenu
	maven {
		url 'https://maven.terraformersmc.com'
	}

	// interference
	maven {
		url = "https://api.modrinth.com/maven"
	}

	// Vazkii mods
	maven {
		url 'https://maven.blamejared.com'
	}

}

runClient {

}

loom {
	accessWidenerPath = file("src/main/resources/redbits.accesswidener")
	runtimeOnlyLog4j = true
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}" transitive false
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2" transitive false
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}" transitive false

	// ModMenu
	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}" transitive false
	modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}" transitive false

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}" // fuck yourself fabric

	// Cloth Config
	include( modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") ) exclude group: 'net.fabricmc.fabric-api'

	// Patchouli
	//modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}-FABRIC"

	// Interference API
	modImplementation "maven.modrinth:interference:${project.interference_version}" transitive false
	include "maven.modrinth:interference:${project.interference_version}" transitive false

	implementation rootProject
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand (
				"version": project.version,
				"loader_version": project.loader_version
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}
